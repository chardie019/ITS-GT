# Lab 11: Warm-up Questions
# Insert into webct table
# id | qtype | title | image | question | answers | category
INSERT INTO webct VALUES(2094,'P','Convolving an Exponential with a Pulse','','Set the filters impulse response to a rectangular pulse: <tt>h(t)={u(t)-u(t-3)}</tt>.', 0, 'Warm-up11');
INSERT INTO webct VALUES(2095,'P','Convolving an Exponential with a Pulse','','Set the input  to a one-sided exponential: <tt>x(t)=e<sup>-0.25t</sup>u(t)</tt>.  Strictly speaking you cannot make an infinitely long signal in <tt>cconvdemo</tt>, but if you make the length greater than 25, you will have a very long finite-duration signal which is long enough that you will not see the end within the GUI display.', 0, 'Warm-up11');
INSERT INTO webct VALUES(2096,'P','Convolving an Exponential with a Pulse','','Use the GUI to produce a plot of the output  signal.  Use the <i>sliding hand tool</i> to grab the time marker and move it to produce the flip-and-slide effect of convolution.<p><i>Note:</i> if you move the hand tool past the end of the plot, the plot will automatically scroll in that direction.', 0, 'Warm-up11');
INSERT INTO webct VALUES(2097,'P','Convolving an Exponential with a Pulse','','The top panel is a plot of <tt>x(&tau;)</tt>, overlayed with the &ldquo;flipped&rdquo; impulse response <tt>h(t-&tau;)</tt> used to produce the &ldquo;flip and slide&rdquo; effect of convolution. The middle panel shows the integrand which is the product of <tt>x(&tau;)</tt> and <tt>h(t-&tau;)</tt>. The green-shaded area is where the integral calculates area. As you slide the flipped signal in the top panel, the horizontal length of the green region changes which indicates that the limits of integration are changing. The top two plots are functions of <tt>&tau;</tt>, while  the bottom plot of <tt>y(t)</tt> is a function of <tt>t</tt>.  Observe that the output <tt>y(t)</tt> is composed of three distinct regions: no overlap (on the left side), partial overlap (on the left side), and complete overlap. If you substitute <tt>x(t)</tt> and <tt>h(t)</tt> from from parts (a) and (b) into Eq. (1), you can show that the output is given by the piecewise equation <div class="center"><pre class="ITS_Equation"><table class="ITS_Equation"><tr><td style="width:90%"><img src="/ece2025/cgi-bin/mimetex.exe?y(t)=\\left\{\\begin{array}{lcl}\\quad 0 & \\qquad t< T_0 &\\qquad\\text{Region}\\ 1\\\\& \\\\{\\quad\\int_{L_1}^{L_2}e^{-0.25\\tau}d\\tau} &\\qquad T_1\\leq t <T_2&\\qquad\\text{Region}\\ 2\\\\& \\\\{\\quad\\int_{L_3}^{L_4}e^{-0.25\\tau}d\\tau}&\\qquad T_3\\leq t <\\infty &\\qquad\\text{Region}\\ 3\\end{array}\\right."></td><td>(5)</td></tr></table></pre></div>Use the GUI to observe that <tt>y(t)</tt> does indeed have three distinct regions, and use it to confirm that <div class="center"><pre class="ITS_Equation">T<sub>0</sub>=0,  T<sub>1</sub>=0,  T<sub>2</sub>=3, and T<sub>3</sub>=3</pre></div>are the correct values for the boundaries of the regions.  Then determine the limits of integration for each integral above. Make sure that you are flipping and sliding <tt>h(t)</tt>.<i><p>Also, notice that the limits of integration might depend on the variable t.</i><br>', 1, 'Warm-up11');
INSERT INTO webct VALUES(2098,'P','Frequency Response of an Analog Filter','','Determine the peak value of the magnitude  response and the location of the peak. Use the algebraic form of the frequency response formula <tt>H(j&omega;)</tt>  to get the peak value. Also, determine the value when <tt>&omega; &rarr; &infin;</tt>, and then determine whether <tt>H(j&omega;)</tt> is a LPF, BPF or HPF. This filter can be produced in the <tt>CLTIdemo</tt>, so use the GUI to plot the frequency response for some value of <tt>a</tt>, say <tt>a=2&pi;(50)</tt>.', 1, 'Warm-up11');
INSERT INTO webct VALUES(2099,'P','Frequency Response of an Analog Filter','','Now suppose that the parameter <tt>a</tt> in <tt>H(j&omega;)</tt> is unknown.  One objective of the lab project will be to learn how to test an unknown system to figure out the value of <tt>a</tt>. The test procedure is as follows: use an input that is the sum of sinusoids, record the output which is also a sum of sinusoids, and then use a spectrum analyzer to extract the amplitudes and phases of the sinusoids. Since the input signal is created as part of the test process, the frequencies of the sinusoids would be known. To simulate this testing process, the MATLAB function <tt>Lab11gen</tt> has been written to generate test signals and record the outputs. The calling sequence is described below:<br><pre class="MATLAB">function [sigin,sigout] = Lab11gen( gtstring, option )<span class="ML_comment"><br>%LAB11GEN  generate input, filter H(jw), and output<br>%    sigin = cell array of [Freq (rad/s),Amp,Phase] for each sinusoid in sum<br>%   sigout = cell array of [Freq (rad/s),Amp,Phase] for each output sinusoid<br>% gtstring = gt login ID, e.g., &rsquo;gburdell8&rsquo;<br>%   option = 0, for Warm-up: given input and output, for 1st-order H(jw)=a/(a+jw)</span></pre></center>Run the function <tt>Lab11gen(&rsquo;YourGTloginID&rsquo;,0)</tt> to generate data about the input and output sum of sinusoids. Then use the <tt>CLTIdemo</tt> to set the input signal, and vary the frequency response parameter <tt>a</tt> to get the correct output. This &ldquo;trial and error&rdquo; method shows how <tt>a</tt> can be found.<p><i>Note:</i> It is also possible to write one or two equations to solve for <tt>a</tt>.', 1, 'Warm-up11');
INSERT INTO webct VALUES(2100,'P','Cell Arrays','','The outputs from the MATLAB function <tt>Lab11gen</tt> are cell arrays. The notation for accessing members of a cell array is to use braces, i.e., <tt>AA{2}</tt> is the second element of the cell array called <tt>AA</tt>. In the case of <tt>Lab11gen</tt>, the members of the cell arrays are row vectors. Each row vector has three elements: the frequency (in rad/s), amplitude and phase of one sinusoidal component in the input signal or output signal. The syntax for getting one member of these row vectors is <tt>AA{n}(k)</tt> which gets the <tt>k</tt>-th element of the <tt>n</tt>-th row vector.  For example, to get the frequency of the second sinusoid in the output signal, you would use <tt>sigout{2}(1)</tt>, while <tt>sigin{3}(2)</tt> is the amplitude of the third sinusoid in the input.', 0, 'Warm-up11');