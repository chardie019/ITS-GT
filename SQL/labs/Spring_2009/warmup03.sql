# Lab 3: Warm-up Questions
# Insert into webct table
# id | qtype | title | image | question | answers | category
INSERT INTO webct VALUES(2018,'P','Beat Control GUI','','Use the <b>beatcon</b> control panel to produce a beat signal with two frequency components: one at 700 Hz and the other at 710 Hz. Use a longer duration than the default to hear the &ldquo;beating&rdquo; sound. Demonstrate the plot and sound to your TA.', 0, 'Warm-up03');
INSERT INTO webct VALUES(2019,'P','Function for a Chirp','','Use the code provided in the pre-Lab section as a starting point in order to write a MATLAB function that will synthesize a &ldquo;chirp&rdquo; signal according to the following template. This will require that you relate the chirp parameters &mu;, &fnof;<sub>&ordm;</sub>, and &phi; to the starting and ending frequencies. Fill in code where you see ???.<pre>function [xx,tt] = make_chirp( f1, f2, dur, fsamp )<br><span class="ML_comment">%MAKE_CHIRP      generate a linear-FM chirp signal<br>%<br>% usage: xx = make_chirp( f1, f2, dur, fsamp )<br>%<br>%     f1 = starting frequency<br>%     f2 = ending frequency<br>%    dur = total time duration<br>%  fsamp = sampling frequency (OPTIONAL: default is 8000)<br>%<br>%     xx = (vector of) samples of the chirp signal<br>%     tt = vector of time instants for t=0 to t=dur<br>%<br></span>if( nargin < 4 ) <span class="ML_comment">%-- Allow optional input argument</span><br>  fsamp = 8000;<br>end<br>tt = ???<br>psi = 2*pi*( ????*tt + ?????*tt.*tt);<br>xx = real( exp(j*psi) );</pre>', 1, 'Warm-up03');
INSERT INTO webct VALUES(2020,'P','Make_chirp.m call','','As a test case, generate a chirp sound whose frequency starts at 2000 Hz and ends at -500 Hz; its duration should be 0.75 sec and the sampling rate should be \&fnof;<sub>s</sub> = 8000 samples/sec. Listen to the chirp using the <tt>soundsc</tt> function.<p>Give the exact calling sequence for <tt>make_chirp.m</tt> in order to produce the test case.', 1, 'Warm-up03');
INSERT INTO webct VALUES(2021,'P','Advanced Topic: Spectrograms','','In order to see a typical spectrogram, run the following code:<p><pre>fs=8000; xx = cos(2000*pi*(0:1/fs:0.5)); spectrogram(xx,1024,fs); colorbar</pre>or:<pre>fs=8000; xx = cos(2000*pi*(0:1/fs:0.5)); plotspec(xx,fs,1024); colorbar</pre>Notice that the spectrogram image contains one horizontal line at the correct frequency of the sinusoid.<p>For a spectrogram with negative frequencies, try the following<pre>fs=8000; xx = cos(2000*pi*(0:1/fs:0.5)); plotspec(xx+j*1e-9,fs,1024); colorbar</pre>Demonstrate the two-sided spectrogram i.e., include the negative frequencies by using the MATLAB function <tt>plotspec</tt>.<p>For the sinusoid, describe the important features that you see in the spectrogram and explain why they are correct.', 1, 'Warm-up03');
INSERT INTO webct VALUES(2022,'P','Spectrogram of the chirp','','Next, show the spectrogram of the chirp produced in the previous part, Section 3.2. Describe the important features that you see in the spectrogram of the chirp and explain why they are correct.', 1, 'Warm-up03');