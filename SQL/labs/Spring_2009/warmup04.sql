# Lab 4: Warm-up Questions
# Insert into webct table
# id | qtype | title | image | question | answers | category
INSERT INTO webct VALUES(2023,'P','Von Hann (or Hanning) Window plot','','Draw a sketch (by hand) of <tt>w<sub>H</sub>(t)</tt> for the case T = 50 ms.', 0, 'Warm-up04');
INSERT INTO webct VALUES(2024,'P','Von Hann (or Hanning) Window MATLAB','','Write a MATLAB function that will generate (samples of) a von Hann window. Since sampling at <tt>t = 0</tt> or <tt>t = 2T</tt> would give a zero value, generate the time vector at <tt>t = 0.5/&fnof;<sub>s</sub></tt>, <tt>1.5/&fnof;<sub>s</sub></tt>, <tt>2.5/&fnof;<sub>s</sub></tt>, <tt>...</tt><p>Use the following MATLAB code as a template:<pre>function [win,tt] = vonHannwin( T, fs )<span class="ML_comment"><br>% VONHANNWIN make a von Hann window<br>%<br>%   T, so that 2T = duration of the window<br>%   fs = sampling rate<br>%  win = values of the window at the times in the tt vector</span><br>tt = 0.5/fs : 1/fs : 2*T;<br>win = ??? <span class="ML_error"><==== add code here</span></pre>', 1, 'Warm-up04');
INSERT INTO webct VALUES(2025,'P','Von Hann (or Hanning) Window window length','','Test your <tt>vonHannwin</tt> function by making a MATLAB plot of a von Hann window for the case <tt>T=50 ms</tt>, using a sampling rate of 8000 samples/s. How long is the window in number of samples?<p>Note: it is best if the length is even.', 1, 'Warm-up04');
INSERT INTO webct VALUES(2026,'P','Overlapped Signal Segments','','<b>Number of Segments:</b> If the duration of <tt>y(t)</tt> is <tt>1.5</tt> s and <tt>T=50</tt> ms, how many segments would be produced by overlap method in (3)?', 1, 'Warm-up04');
INSERT INTO webct VALUES(2027,'P','Overlapped Signal Segments','','<b>Segment Length:</b> If we are using MATLAB to represent the signal <tt>y(t)</tt>, then we would sample <tt>y(t)</tt> at a rate &fnof;<sub>s</sub> to produce a vector containing the samples, i.e., <tt>y[n]= y(n/&fnof;<sub>s</sub>)</tt>. For example, if &fnof;<sub>s</sub>=8000 samples/s and the duration of <tt>y(t)</tt> is 1.5 s, then the entire &ldquo;y&rdquo; vector would contain 12000 samples. How many samples are contained in each segment created by the overlap method in (3) if T = 50 ms and &fnof;<sub>s</sub> = 8000 Hz?', 1, 'Warm-up04');
INSERT INTO webct VALUES(2028,'P','Overlapped Signal Segments','','Write a short MATLAB function that will perform the segmentation according to (3).  The function&rsquo;s output should be a matrix whose column length is the number of samples in one segment, and whose row length is the number of segments. Here is a template:<pre>function yseg = overlap50( yy, T, fs )<br><span class="ML_comment">% OVERLAP50 Fill matrix columns with signal segments<br>%           overlapped by 50%<br>%   yy = (long) input signal<br>%        T, so that 2T = duration of the window<br>%   fs = sampling rate<br>% yseg = matrix containing segmented signal<br>%</span><br>L = round(fs*T); L2 = round(fs*T*2);<br>Ly = length(yy);<br>n2 = L2;<br>k=1;<br>while( n2 &lt; Ly)<br>  n1 = ???? <span class="ML_error"> <==== FILL IN CODE for n1 and n2 </span><br>  ychop = yy(n1:n2);<br>  yseg(:,k) = ychop(:); <span class="ML_comment">%--make sure it&rsquo;s a column</span><br>  k = k+1;<br>  n2 = n2 + L;<br>end</pre>', 1, 'Warm-up04');
INSERT INTO webct VALUES(2029,'P','Overlapped Windows','','Test your function for T=25 ms and &fnof;<sub>s</sub>=8000 samples/s on the following signal:<pre>yy = cos( 40*pi*(0:(1/8000):1.5) );</pre>Explain why every other column of the <tt>yseg</tt> matrix is identical for this test case. Use the MATLAB plotting function <tt>strips(yseg(:,1:6))</tt> to plot the first six columns (as rows in the plot).', 1, 'Warm-up04');
INSERT INTO webct VALUES(2030,'P','Add Overlapped and Windowed Segments','','Complete the code fragment below that will add together six shifted von Hann windows.  It should produce a plot something like Fig. 1.<pre>fs = 8000;<br>win = vonHannwin( 0.05, fs);<br>winsix = zeros(1,4*length(win));<br>n1 = 1;<br>Lw = length(win);<br>ttx = (1:length(winsix))/fs;<br>plot( ttx, winsix );<br>hold on<br>for k = 1:6<br>  n2 = ????? <span class="ML_comment">%%<==== add code here</span><br>  winsix(n1:n2) = winsix(n1:n2) + win; <span class="ML_comment">%??? <==== FILL in n1 & n2</span><br>  plot((n1:n2)/fs,win,&rsquo;--b&rsquo;) <span class="ML_comment">%%<==== same range as above</span><br>  pause<br>  n1 = n1 + ??????????????? <span class="ML_comment">%%<==== add code here</span><br>end<br>hold on, plot( ttx, winsix, &rsquo;-r&rsquo; ), hold off</pre>', 1, 'Warm-up04');
INSERT INTO webct VALUES(2031,'P','Add Overlapped and Windowed Segments','','Here is a code fragment that does the windowing:<pre><span class="ML_comment">% yseg = matrix containing segmented signal</span><br>for k = 1:size(yseg,2)<br>  ysegwin(:,k) = yseg(:,k).*vonHannwin(size(yseg,1)/(2*fs),fs)&rsquo;;<br>end</pre>', 0, 'Warm-up04');
INSERT INTO webct VALUES(2032,'P','Add Overlapped and Windowed Segments','','Write a <tt>for</tt> loop that will add the windowed segments back together to form <tt>yy</tt> over most of the time interval, except for the first and last <tt>T</tt> secs.  Recall that the windowed segements are stored in the columns of a matrix, called <tt>ysegwin</tt> in the previous part. Then the code in Section 3.3(a) can be modified to perform the overlapping additions<p>', 1, 'Warm-up04');
INSERT INTO webct VALUES(2033,'P','Add Overlapped and Windowed Segments','','Now test the entire process with the signal<pre>xx = cos(2*pi*440*tt);</pre>with a segment duration of 10 ms, 50% overlap, and &fnof;<sub>s</sub> = 8000 Hz.  Perform the three processing steps as: (1) break it into segments (refer to Section 3.2(c)), (2) window each segment with a von Hann window (part (a) above), and (3) add the segments back together (part (b) above).  Show that the result is a 440-Hz cosine, except for the first 5 ms and the last 5 ms.', 1, 'Warm-up04');